import {
  CustomShaderMaterial,
  _objectSpread2,
  _objectWithoutProperties,
  require_glsl_token_functions,
  require_glsl_token_string,
  require_object_hash,
  require_string
} from "./chunk-4TGTZCKT.js";
import "./chunk-WVBH7AG2.js";
import {
  require_react
} from "./chunk-KQSTW7SD.js";
import {
  __toESM
} from "./chunk-PR4QN5HX.js";

// node_modules/.pnpm/three-custom-shader-material@5.4.0_@react-three+fiber@8.17.7_react-dom@18.3.1_react@18.3.1__r_fcpyf7s4bz2tndf6vygpi2q77a/node_modules/three-custom-shader-material/dist/three-custom-shader-material.esm.js
var React = __toESM(require_react());
var import_object_hash = __toESM(require_object_hash());
var import_glsl_tokenizer = __toESM(require_string());
var import_glsl_token_string = __toESM(require_glsl_token_string());
var import_glsl_token_functions = __toESM(require_glsl_token_functions());
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var _excluded = ["baseMaterial", "fragmentShader", "vertexShader", "uniforms", "cacheKey", "attach"];
var CustomShaderMaterial2 = React.forwardRef(function(_ref, ref) {
  var baseMaterial = _ref.baseMaterial, fragmentShader = _ref.fragmentShader, vertexShader = _ref.vertexShader, uniforms = _ref.uniforms, cacheKey = _ref.cacheKey, _ref$attach = _ref.attach, attach = _ref$attach === void 0 ? "material" : _ref$attach, props = _objectWithoutProperties(_ref, _excluded);
  var updateProps = React.useMemo(function() {
    return {
      fragmentShader,
      vertexShader,
      uniforms,
      cacheKey
    };
  }, [fragmentShader, vertexShader, uniforms, cacheKey]);
  var material = React.useMemo(function() {
    return new CustomShaderMaterial(_objectSpread2(_objectSpread2({
      baseMaterial
    }, updateProps), props));
  }, [baseMaterial, updateProps]);
  React.useEffect(function() {
    return function() {
      return material.dispose();
    };
  }, [material]);
  return React.createElement("primitive", _extends({
    object: material,
    ref,
    attach
  }, props));
});
export {
  CustomShaderMaterial2 as default
};
//# sourceMappingURL=three-custom-shader-material.js.map
